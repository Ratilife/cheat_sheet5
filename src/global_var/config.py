# config.py
# TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 04.08.2025
            # üèÜtask: –†–∞–±–æ—Ç–∞ —Å –æ–∫–Ω–æ–º –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏;
            # üèÜtask: –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ—Ç–æ—Ä–∞—è –∑–Ω–∞–µ—Ç –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–∞–ø–∫–∞ for_program –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏;

from datetime import datetime
from typing import Dict, Optional
import json
from pathlib import Path
import os


# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–≤ –ø–∞–ø–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Ä—è–¥–æ–º —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π)
CONFIG_FILE = Path.home() / "root_folder_path.json"

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
ROOT_FOLDER_DATA: Dict[str, Optional[str]] = {
    "path": None,    # –ü—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
    "date": None     # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
}
FOR_PROGRAM_PATH:  Optional[str] = None
BOOKMARKS_PATH:  Optional[str] = None
def set_for_program_path():
    global FOR_PROGRAM_PATH
    root_folder_path = get_root_folder()
    for_program_path = os.path.join(root_folder_path['path'], "for_program")
    FOR_PROGRAM_PATH = for_program_path

def get_for_program_path():
    return  FOR_PROGRAM_PATH

def set_bookmarks():
    global BOOKMARKS_PATH
    root_folder_path = get_root_folder()
    bookmarks_path = os.path.join(root_folder_path['path'], "bookmarks")
    BOOKMARKS_PATH = bookmarks_path

def get_bookmarks():
    return BOOKMARKS_PATH
def load_config() -> None:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    global ROOT_FOLDER_DATA
    if CONFIG_FILE.exists():
        try:
            with open(CONFIG_FILE, "r", encoding="utf-8") as f:
                ROOT_FOLDER_DATA.update(json.load(f))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
    set_for_program_path()
    set_bookmarks()

def _save_config() -> None:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª"""
    try:
        with open(CONFIG_FILE, "w", encoding="utf-8") as f:
            json.dump(ROOT_FOLDER_DATA, f, indent=4)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞: {e}")

def update_root_folder(path: str) -> None:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ"""
    global ROOT_FOLDER_DATA
    ROOT_FOLDER_DATA["path"] = path
    ROOT_FOLDER_DATA["date"] = datetime.now().strftime("%d-%m-%Y")
    _save_config()  # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏

def get_root_folder() -> Dict[str, Optional[str]]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ"""
    return ROOT_FOLDER_DATA.copy()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ø–∏—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑–≤–Ω–µ

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
load_config()