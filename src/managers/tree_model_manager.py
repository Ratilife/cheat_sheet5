from PySide6.QtCore import QAbstractItemModel, QModelIndex, QObject, Signal
from src.models.st_md_file_tree_model import STMDFileTreeModel
from src.models.st_md_file_tree_item import STMDFileTreeItem
from src.parsers.metadata_cache import MetadataCache
from src.parsers.file_parser_service import FileParserService
class TreeModelManager(QObject):
    def __init__(self, parser_service: FileParserService, metadata_cache: MetadataCache):
        super().__init__()
        self.parser_service = parser_service
        self.metadata_cache = metadata_cache
        self.tab_models = {}
    def build_initial_model(self, file_paths: list) -> STMDFileTreeModel:
        """–°–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª—å —Ç–æ–ª—å–∫–æ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–æ–≤"""
        #  TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 22.08.2025 - —É—Å—Ç–∞—Ä–µ–ª –º–µ—Ç–æ–¥ build_skeleton_model –≤–∑–∞–º–µ–Ω –ø—Ä–∏–π–¥–µ—Ç build_initial_model
        root_item = STMDFileTreeItem(["Root", "folder"])


        for path in file_paths:
            # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∏–∑ –∫—ç—à–∞ –∏–ª–∏ –ø–∞—Ä—Å–∏–º)
            metadata = self.metadata_cache.get(path) or self._parse_metadata(path)

            # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–µ—Ä–µ–≤–∞
            item = STMDFileTreeItem([
                metadata["name"],
                metadata["type"],
                path  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
            ], root_item)
            root_item.appendChild(item)

        self.model = STMDFileTreeModel(root_item)

        return self.model


    def _parse_metadata(self, file_path: str) -> dict:
        """–ü–∞—Ä—Å–∏—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç FileParserService)"""
        return self.parser_service.parse_metadata(file_path)