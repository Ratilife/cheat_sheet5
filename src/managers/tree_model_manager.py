from PySide6.QtCore import QAbstractItemModel, QModelIndex, QObject, Signal
from src.models.st_md_file_tree_model import STMDFileTreeModel
from src.models.st_md_file_tree_item import STMDFileTreeItem
from src.parsers.metadata_cache import MetadataCache
from src.parsers.file_parser_service import FileParserService
from src.parsers.content_cache import ContentCache
class TreeModelManager(QObject):
    model_updated = Signal(str, str)  # tab_name, file_path
    def __init__(self, parser_service: FileParserService, metadata_cache: MetadataCache, content_cache:ContentCache):
        super().__init__()
        self.parser_service = parser_service
        self.metadata_cache = metadata_cache
        self.content_cache = content_cache

        self.tab_models = {}    # –∫—ç—à –º–æ–¥–µ–ª–µ–π
        self.file_to_tabs = {}  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –≤ –∫–∞–∫–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã

    def build_model_for_tab(self, tab_name: str, file_paths: list[str]) -> STMDFileTreeModel:
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 28.08.2025
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å —Ñ–∞–π–ª–æ–≤ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
        for file_path in file_paths:
            if file_path not in self.file_to_tabs:
                self.file_to_tabs[file_path] = []
            if tab_name not in self.file_to_tabs[file_path]:
                self.file_to_tabs[file_path].append(tab_name)

        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
        model = STMDFileTreeModel(self.content_cache)

        for file_path in file_paths:
            full_data = self.content_cache.get(file_path)
            if full_data:
                model.add_file(file_path, full_data)
            else:
                metadata = self.metadata_cache.get(file_path)
                if not metadata:
                    metadata = self._parse_metadata(file_path)
                    self.metadata_cache.set(file_path, metadata,
                                            file_type=metadata.get('type'))
                model.add_file(file_path, metadata)

        self.tab_models[tab_name] = model
        return model

    def update_file_in_all_tabs(self, file_path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö, –≥–¥–µ –æ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"""
        if file_path not in self.file_to_tabs:
            return False

        full_data = self.content_cache.get(file_path)
        if not full_data:
            return False

        updated = False
        for tab_name in self.file_to_tabs[file_path]:
            if self.update_model(tab_name, file_path):
                updated = True
                self.model_updated.emit(tab_name, file_path)

        return updated
    def _parse_metadata(self, file_path: str) -> dict:
        """–ü–∞—Ä—Å–∏—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç FileParserService)"""
        return self.parser_service.parse_metadata(file_path)

    def update_model(self, tab_name: str, file_path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 28.08.2025
        if tab_name in self.tab_models:
            model = self.tab_models[tab_name]
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
            full_data = self.content_cache.get(file_path)
            if full_data:
                return model.update_file_item(file_path, full_data)
        return False

    def refresh_tab_view(self, tab_name: str):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç view –¥–ª—è –≤–∫–ª–∞–¥–∫–∏"""
        if tab_name in self.tab_models:
            model = self.tab_models[tab_name]
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å—é –º–æ–¥–µ–ª—å
            model.beginResetModel()
            model.endResetModel()

    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã(–ù—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è)
    def refresh_file_in_tabs(self, file_path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –≤–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 28.08.2025 –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ refresh_file_in_tabs
        for tab_name, model in self.tab_models.items():
            model.refresh_item(file_path)
    # ------------(–ù—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è)