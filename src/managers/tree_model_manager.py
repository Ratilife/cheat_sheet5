
from PySide6.QtCore import QAbstractItemModel, QModelIndex, QObject
from src.models.st_md_file_tree_model import STMDFileTreeModel
from src.models.st_md_file_tree_item import STMDFileTreeItem

import os
class TreeModelManager(QObject):
    """
      –§–∞—Å–∞–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—å—é –¥–µ—Ä–µ–≤–∞ —Ñ–∞–π–ª–æ–≤. –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç:
      - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      - –ü–∞—Ä—Å–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤
      - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å DeleteManager
      """

    def __init__(self, parser_service):
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 12.07.2025
        super().__init__()
        self.parser_service = parser_service
        self.tab_models = {}  # –ö—ç—à –º–æ–¥–µ–ª–µ–π –ø–æ –∏–º–µ–Ω–∞–º –≤–∫–ª–∞–¥–æ–∫

    def create_tree_model(self, file_paths: list) -> QAbstractItemModel:
        """–°–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025
        # 1. –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
        root_item = STMDFileTreeItem(["Root", "folder"])

        # 2. –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
        model = STMDFileTreeModel(root_item)

        # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –º–æ–¥–µ–ª—å
        for file_path in file_paths:
            self._add_file_to_model(model, file_path)

        return model

    def create_models_from_tabs(self, tab_data: dict) -> dict:
        """
        –°–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª–∏ –¥–µ—Ä–µ–≤—å–µ–≤ –¥–ª—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
        Args:
            tab_data (dict): –°–ª–æ–≤–∞—Ä—å {–∏–º—è_–≤–∫–ª–∞–¥–∫–∏: [—Å–ø–∏—Å–æ–∫_—Ñ–∞–π–ª–æ–≤]}
        Returns:
            dict: –°–æ–∑–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ {–∏–º—è_–≤–∫–ª–∞–¥–∫–∏: –º–æ–¥–µ–ª—å}
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025
        models = {}
        for tab_name, file_paths in tab_data.items():
            models[tab_name] = self.create_tree_model(file_paths)
        self.tab_models.update(models)
        return models

    def get_model(self, tab_name: str) -> QAbstractItemModel:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        Args:
            tab_name (str): –ò–º—è –≤–∫–ª–∞–¥–∫–∏
        Returns:
            QAbstractItemModel: –ú–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞ –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025 - –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥
        return self._models_cache.get(tab_name)

    def refresh_model(self, tab_name: str, new_file_paths: list) -> bool:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
        Args:
            tab_name (str): –ò–º—è –≤–∫–ª–∞–¥–∫–∏
            new_file_paths (list): –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        Returns:
            bool: True –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025 - –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥
        if tab_name in self._models_cache:
            self._models_cache[tab_name] = self._create_single_model(new_file_paths)
            return True
        return False

    def _create_single_model(self, file_paths: list) -> STMDFileTreeModel:
        """
        –°–æ–∑–¥–∞–µ—Ç –æ–¥–Ω—É –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
        Args:
            file_paths (list): –°–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º
        Returns:
            STMDFileTreeModel: –ì–æ—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025

        # 1. –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
        root_item = STMDFileTreeItem(["Root", "folder"])
        model = STMDFileTreeModel(root_item)

        # 2. –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –º–æ–¥–µ–ª—å
        for file_path in file_paths:
            if os.path.exists(file_path):
                self._add_file_to_model(model, file_path)

        return model

    def _add_file_to_model(self, model: STMDFileTreeModel, file_path: str):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤ –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞
        Args:
            model (STMDFileTreeModel): –¶–µ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å
            file_path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 13.07.2025
        try:
            # 1. –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª
            file_type, parsed_data = self.parser_service.parse_and_get_type(file_path)
            file_name = os.path.basename(file_path)

            # 2. –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ñ–∞–π–ª–∞
            file_item = STMDFileTreeItem(
                [file_name, file_type, file_path],
                model.rootItem
            )

            # 3. –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞
            if file_type == "markdown":
                self._add_md_structure(file_item, parsed_data)
            elif file_type == "file":  # ST-—Ñ–∞–π–ª
                self._add_st_structure(file_item, parsed_data)

            # 4. –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–æ–¥–µ–ª—å
            model.beginInsertRows(QModelIndex(), model.rowCount(), model.rowCount())
            model.rootItem.appendChild(file_item)
            model.endInsertRows()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {str(e)}")

    def _add_md_structure(self, parent_item: STMDFileTreeItem, parsed_data: dict):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É Markdown-—Ñ–∞–π–ª–∞"""
        for section in parsed_data.get('structure', []):
            section_item = STMDFileTreeItem(
                [section['name'], 'section', section.get('content', '')],
                parent_item
            )
            parent_item.appendChild(section_item)

    def _add_st_structure(self, parent_item: STMDFileTreeItem, parsed_data: dict):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É ST-—Ñ–∞–π–ª–∞"""
        for item in parsed_data.get('structure', []):
            self._add_st_item(parent_item, item)

    def _add_st_item(self, parent_item: STMDFileTreeItem, item_data: dict):
        """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã ST-—Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
        item = STMDFileTreeItem(
            [item_data['name'], item_data['type']],
            parent_item
        )

        if item_data['type'] == 'folder' and 'children' in item_data:
            for child in item_data['children']:
                self._add_st_item(item, child)

        parent_item.appendChild(item)