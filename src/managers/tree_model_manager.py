from PySide6.QtCore import QAbstractItemModel, QModelIndex, QObject, Signal
from PySide6.QtWidgets import QTabWidget
from src.models.st_md_file_tree_model import STMDFileTreeModel
from src.models.st_md_file_tree_item import STMDFileTreeItem
from src.parsers.metadata_cache import MetadataCache
from src.parsers.file_parser_service import FileParserService
from src.parsers.content_cache import ContentCache
from src.controllers.selection_controller import TreeSelectionController
class TreeModelManager(QObject):
    model_updated = Signal(str, str)  # tab_name, file_path
    def __init__(self, parser_service: FileParserService,
                 metadata_cache: MetadataCache,
                 content_cache:ContentCache,
                 tab_widget: QTabWidget = None):
        """
                –õ–æ–∫–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö

                Args:
                    parser_service: —Å–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤
                    metadata_cache: –∫—ç—à –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
                    content_cache: –∫—ç—à –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    tab_widget: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –≤–∫–ª–∞–¥–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        """
        super().__init__()
        self.parser_service = parser_service
        self.metadata_cache = metadata_cache
        self.content_cache = content_cache

        #self._file_operations = None        #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager

        # üîΩ –õ–û–ö–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –¥–ª—è —ç—Ç–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ üîΩ
        self._tab_models = {}    # –∫—ç—à –º–æ–¥–µ–ª–µ–π
        self._file_to_tabs = {}  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –≤ –∫–∞–∫–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã
        self._tab_widget = tab_widget  # –õ–æ–∫–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –≤–∫–ª–∞–¥–æ–∫

        #self.tab_widgets = {}  # {"side_panel": tab_widget1, "file_editor": tab_widget2}  #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        #self.widget_priorities = []  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–∫–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞                          #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—ã–¥–µ–ª–µ–Ω–∏—è
        self.selection_controller = TreeSelectionController(content_cache)

        print(f"DEBUG: –°–æ–∑–¥–∞–Ω –õ–û–ö–ê–õ–¨–ù–´–ô TreeModelManager (id: {id(self)})")

    @property
    def file_operations(self):                                      #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ FileOperations –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏"""
        if self._file_operations is None:
            # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            from src.operation.file_operations import FileOperations
            self._file_operations = FileOperations()
        return self._file_operations

    #üîΩ–î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã 17.09.2025üîΩ
    def connect_tree_view(self, tree_view):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –¥–µ—Ä–µ–≤–æ –∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É –≤—ã–¥–µ–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 17.09.2025 –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ connect_tree_view
        self.selection_controller.connect_tree_view(tree_view)
        print(f"DEBUG: –î–µ—Ä–µ–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É (id: {id(self)})")

    def build_model_for_tab(self, tab_name: str, file_paths: list[str])-> STMDFileTreeModel:
        """–°–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –≤ —ç—Ç–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        print(f"DEBUG: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑–∏ —Ñ–∞–π–ª–æ–≤ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –õ–û–ö–ê–õ–¨–ù–û
        for file_path in file_paths:
            if file_path not in self._file_to_tabs:
                self._file_to_tabs[file_path] = []
            if tab_name not in self._file_to_tabs[file_path]:
                self._file_to_tabs[file_path].append(tab_name)

        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        model = STMDFileTreeModel(self.content_cache)

        for file_path in file_paths:
            data = self._get_file_data(file_path)
            if data:
                model.add_file(file_path, data)

        self._tab_models[tab_name] = model
        return model

    def add_files_to_tab(self, tab_name: str, file_paths: list[str]) -> bool:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        if tab_name not in self._tab_models:
            print(f"ERROR: –í–∫–ª–∞–¥–∫–∞ '{tab_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —ç—Ç–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ")
            return False

        model = self._tab_models[tab_name]
        success_count = 0

        for file_path in file_paths:
            data = self._get_file_data(file_path)
            if data and model.add_file(file_path, data):
                # –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
                if file_path not in self._file_to_tabs:
                    self._file_to_tabs[file_path] = []
                if tab_name not in self._file_to_tabs[file_path]:
                    self._file_to_tabs[file_path].append(tab_name)
                success_count += 1

        print(f"DEBUG: –î–æ–±–∞–≤–ª–µ–Ω–æ {success_count} —Ñ–∞–π–ª–æ–≤ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä {id(self)}")
        return success_count > 0

    def update_file_in_tabs(self, file_path: str) -> bool:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤–æ –≤–∫–ª–∞–¥–∫–∞—Ö –≠–¢–û–ì–û –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        if file_path not in self._file_to_tabs:
            return False

        data = self.content_cache.get(file_path)
        if not data:
            return False

        updated = False
        for tab_name in self._file_to_tabs[file_path]:
            if tab_name in self._tab_models:
                if self._tab_models[tab_name].update_file_item(file_path, data):
                    updated = True
                    self.model_updated.emit(tab_name, file_path)

        return updated

    def get_model(self, tab_name=None):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ–¥–µ–ª—å(–∏) –¥–µ—Ä–µ–≤—å–µ–≤

        Args:
            tab_name (str, optional):
                - –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
                - –ï—Å–ª–∏ None: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π {tab_name: model}
        """
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.09.2025
        if tab_name:
            return self._tab_models.get(tab_name)
        else:
            return self._tab_models  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å

    def get_tabs_for_file(self, file_path: str) -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∫–ª–∞–¥–∫–∏ —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Ñ–∞–π–ª"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        return self._file_to_tabs.get(file_path, [])

    def set_tab_widget(self, tab_widget: QTabWidget):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –≤–∫–ª–∞–¥–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        self._tab_widget = tab_widget


    def get_active_tab_name(self) -> str | None:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        if self._tab_widget and self._tab_widget.count() > 0:
            current_index = self._tab_widget.currentIndex()
            if current_index >= 0:
                return self._tab_widget.tabText(current_index)
        return None

    # üîΩ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ üîΩ
    def _get_file_data(self, file_path: str) -> dict:
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        full_data = self.content_cache.get(file_path)
        if full_data:
            return full_data

        metadata = self.metadata_cache.get(file_path)
        if not metadata:
            metadata = self.parser_service.parse_metadata(file_path)
            self.metadata_cache.set(
                file_path,
                metadata,
                file_type=metadata.get('type')
            )

        return metadata

    def debug_info(self):
        """–í—ã–≤–æ–¥–∏—Ç –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 17.09.2025
        print("=" * 50)
        print(f"–õ–û–ö–ê–õ–¨–ù–´–ô TreeModelManager (id: {id(self)})")
        print(f"–ú–æ–¥–µ–ª–∏: {list(self._tab_models.keys())}")
        print(f"–§–∞–π–ª–æ–≤: {len(self._file_to_tabs)}")
        print(f"–í–∏–¥–∂–µ—Ç: {'–µ—Å—Ç—å' if self._tab_widget else '–Ω–µ—Ç'}")
        print("=" * 50)
    #üîΩ–ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ 17.09.2025üîΩ


    def connect_tree_views(self, trees_dict: dict):                 #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤—ã–¥–µ–ª–µ–Ω–∏—è –∫–æ –≤—Å–µ–º –¥–µ—Ä–µ–≤—å—è–º"""
        for tab_name, tree_view in trees_dict.items():
            self.selection_controller.connect_tree_view(tree_view)
            print(f"DEBUG: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –¥–µ—Ä–µ–≤—É –≤–∫–ª–∞–¥–∫–∏ '{tab_name}'")

    def build_model_for_tab_old(self, tab_name: str, file_paths: list[str]) -> STMDFileTreeModel:  #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–°–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –≤ —ç—Ç–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 28.08.2025
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å —Ñ–∞–π–ª–æ–≤ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
        print(f"DEBUG‚úÖ: –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' —Å —Ñ–∞–π–ª–∞–º–∏ {len(file_paths)}")
        for file_path in file_paths:
            print(f"DEBUG‚úÖ: –ø—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞  {file_path} –∫ –≤–∫–ª–∞–¥–∫–µ {tab_name}")
            if file_path not in self.file_to_tabs:
                self.file_to_tabs[file_path] = []
            if tab_name not in self.file_to_tabs[file_path]:
                self.file_to_tabs[file_path].append(tab_name)

        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
        model = STMDFileTreeModel(self.content_cache)

        for file_path in file_paths:

            full_data = self.content_cache.get(file_path)
            if full_data:
                model.add_file(file_path, full_data)
            else:
                metadata = self.metadata_cache.get(file_path)
                if not metadata:
                    metadata = self._parse_metadata(file_path)
                    self.metadata_cache.set(file_path, metadata,
                                        file_type=metadata.get('type'))
                model.add_file(file_path, metadata)

        self.tab_models[tab_name] = model
        print(f"DEBUGüíæ: –ú–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ tab_models")
        print(f"DEBUG: –¢–µ–ø–µ—Ä—å –≤ tab_models: {list(self.tab_models.keys())}")
        return model

    def add_files_to_tab_old(self, tab_name: str, file_paths: list[str]):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        Args:
            tab_name: –∏–º—è —Ü–µ–ª–µ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
            file_paths: —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        Returns:
            bool: —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
        if tab_name not in self.tab_models:
            print(f"DEBUG‚ùå: –ú–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False

        # –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å –≤–∫–ª–∞–¥–∫–∏
        model = self._tab_models[tab_name]

        # –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª—ã
        parsed_data_list = self._parse_content_data(file_paths)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –≤ –º–æ–¥–µ–ª—å
        for file_path, parsed_data in zip(file_paths, parsed_data_list):
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ –º–æ–¥–µ–ª—å
            success = model.add_file(file_path, parsed_data)

            if success:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑–∏ —Ñ–∞–π–ª–æ–≤ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
                if file_path not in self.file_to_tabs:
                    self.file_to_tabs[file_path] = []
                if tab_name not in self.file_to_tabs[file_path]:
                    self.file_to_tabs[file_path].append(tab_name)
                print(f"DEBUG‚úÖ: –§–∞–π–ª '{file_path}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∫–ª–∞–¥–∫—É '{tab_name}'")
            else:
                print(f"DEBUG‚ùå: –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª '{file_path}'")

        return True

    def update_file_in_all_tabs(self, file_path: str):                  #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager ? –ü–û–î–£–ú–ê–¢–¨
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö, –≥–¥–µ –æ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"""
        if file_path not in self._file_to_tabs:
            return False

        print(f"DEBUG‚úÖ: update_file_in_all_tabs –¥–ª—è {file_path}")
        print(f"DEBUG‚úÖ: —Ñ–∞–π–ª –≤ file_to_tabs: {file_path in self._file_to_tabs}")

        if file_path not in self._file_to_tabs:
            print(f"DEBUG‚úÖ: –§–∞–π–ª {file_path} –Ω–µ—Ç –≤  file_to_tabs")
            print(f"DEBUG‚úÖ: –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã: {list(self._file_to_tabs.keys())}")
            return False

        full_data = self.content_cache.get(file_path)
        if not full_data:
            return False

        updated = False
        for tab_name in self._file_to_tabs[file_path]:
            if self.update_model(tab_name, file_path):           #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
                updated = True
                self.model_updated.emit(tab_name, file_path)

        return updated
    def _parse_metadata(self, file_path: str) -> dict:                  #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–ü–∞—Ä—Å–∏—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç FileParserService)"""
        return self.parser_service.parse_metadata(file_path)

    def _parse_content_data(self,file_paths: list[str]) -> list:

        parser_list= []
        for file_path in file_paths:
            parser = self.parser_service.parse_and_get_type(file_path=file_path)
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏ –¥–∞–Ω–Ω—ã–µ
            parser_list.append(parser[1])

        return parser_list
    def update_model(self, tab_name: str, file_path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 28.08.2025
        print(f"DEBUGüîÑ: update_model –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}', —Ñ–∞–π–ª '{file_path}'")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if tab_name not in self._tab_models:
            print(f"DEBUG‚ùå: –í–∫–ª–∞–¥–∫–∞ '{tab_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ tab_models!")
            print(f"DEBUG: –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏: {list(self._tab_models.keys())}")
            return False

        if tab_name in self._tab_models:
            model = self._tab_models[tab_name]
            print(f"DEBUG: –ú–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' –Ω–∞–π–¥–µ–Ω–∞")
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
            full_data = self.content_cache.get(file_path)
            if full_data:
                print(f"DEBUG: –î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ –ø–æ–ª—É—á–µ–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç")
                return model.update_file_item(file_path, full_data)

        print(f"DEBUG‚ùå: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∞–π–ª–∞ '{file_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫—ç—à–µ")
        return False

    def refresh_tab_view(self, tab_name: str):                      #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç view –¥–ª—è –≤–∫–ª–∞–¥–∫–∏"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 28.08.2025 –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ refresh_tab_view
        if tab_name in self.tab_models:
            model = self.tab_models[tab_name]
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å—é –º–æ–¥–µ–ª—å
            model.beginResetModel()
            model.endResetModel()

    def register_tab_widget(self, widget_name: str, tab_widget: QTabWidget, priority: int = 0):  #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç tab_widget —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        Args:
            widget_name: —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –æ–∫–Ω–∞
            tab_widget: —Å—Å—ã–ª–∫–∞ –Ω–∞ QTabWidget
            priority: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (—á–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        """
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 01.09.2025
        self.tab_widgets[widget_name] = tab_widget
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
        self.widget_priorities = sorted(
            self.tab_widgets.keys(),
            key=lambda x: priority,
            reverse=True
        )
        print(f"DEBUG: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω '{widget_name}' —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º {priority}")
        print("üö®üö®üö® //////üö®üö®üö® ")

    def get_active_tab_name_from_any(self) -> tuple[str, str] | None:   #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏–∑ –ª—é–±–æ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
        Returns:
            tuple: (–∏–º—è_–æ–∫–Ω–∞, –∏–º—è_–≤–∫–ª–∞–¥–∫–∏) –∏–ª–∏ None
        """
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 01.09.2025
        # –ò—â–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
        for widget_name in self.widget_priorities:
            tab_widget = self.tab_widgets[widget_name]
            if tab_widget and tab_widget.count() > 0:
                current_index = tab_widget.currentIndex()
                if current_index >= 0:
                    tab_name = tab_widget.tabText(current_index)
                    print(f"DEBUG: –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ '{tab_name}' –≤ –æ–∫–Ω–µ '{widget_name}'")
                    return widget_name, tab_name

        print("DEBUG: –ù–∏ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫")
        return None

    def get_active_tab_info(self) -> dict | None:     #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """
        –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
        Returns:
            dict: {widget_name: str, tab_name: str, tab_widget: QTabWidget}
        """
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 01.09.2025
        result = self.get_active_tab_name_from_any()   #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        if result:
            widget_name, tab_name = result
            return {
                'widget_name': widget_name,
                'tab_name': tab_name,
                'tab_widget': self.tab_widgets[widget_name]
            }
        return None

    def launching_download(self):                   #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏.

            –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
            1. –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
            2. –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É
            3. –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∏–º–µ–Ω–µ–º –≤–∫–ª–∞–¥–∫–∏
            4. –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É

            Returns:
                None: –ú–µ—Ç–æ–¥ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å GUI

            Raises:
                Exception: –ú–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
                           –∏–ª–∏ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        """
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 01.09.2025
        result = self.get_active_tab_info()

        if not result:
           print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –Ω–∏ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ")
           return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∫–ª–∞–¥–∫–µ
        tab_name = result['tab_name']
        files = self.file_operations.load_st_md_files(tab_name)
        self.add_files_to_tab(tab_name=tab_name,file_paths=files)      #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã(–ù—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è)




    def set_active_tab(self, tab_name: str):                #TODO 17/09/2025 –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—É–µ–º TreeModelManager
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –≤–æ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–∫–Ω–∞—Ö
        Args:
            tab_name: –∏–º—è –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 03.09.2025 –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ set_active_tab —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ –Ω—É–∂–µ–Ω, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ —É–¥–∞–ª—è—Ç—å
        # –ò—â–µ–º –≤–∫–ª–∞–¥–∫—É —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –≤–æ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–∫–Ω–∞—Ö
        for widget_name, tab_widget in self.tab_widgets.items():
            for index in range(tab_widget.count()):
                if tab_widget.tabText(index) == tab_name:
                    tab_widget.setCurrentIndex(index)
                    print(f"DEBUG: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ '{tab_name}' –≤ –æ–∫–Ω–µ '{widget_name}'")
                    return

        print(f"DEBUG: –í–∫–ª–∞–¥–∫–∞ '{tab_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–∫–Ω–∞—Ö")

    def refresh_file_in_tabs(self, file_path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –≤–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 28.08.2025 –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ refresh_file_in_tabs
        for tab_name, model in self.tab_models.items():
            model.refresh_item(file_path)
    # ------------(–ù—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è)
    def debug_file_to_tabs(self):
        """–í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ file_to_tabs –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 30.08.2025 –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ debug_file_to_tabs

        print("=" * 50)
        print("DEBUG: file_to_tabs contents:")
        if not self.file_to_tabs:
            print("  EMPTY - no files linked to tabs!")
            return

        for file_path, tabs in self.file_to_tabs.items():
            print(f"  {file_path}: {tabs}")
        print("=" * 50)