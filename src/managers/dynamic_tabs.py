from PySide6.QtCore import QObject, Signal
from PySide6.QtWidgets import QTabWidget, QWidget, QVBoxLayout, QTreeView

from operation.file_operations import FileOperations


class DynamicTabManager(QObject):
    # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 08.08.2025
        # üèÜtask: –°–æ–∑–¥–∞–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏;
        # üèÜtask: –û—Ç–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏;
    # –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞
    tab_created = Signal(str, QTreeView)  # –°–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–¥–∞–µ—Ç –∏–º—è –≤–∫–ª–∞–¥–∫–∏ –∏ –¥–µ—Ä–µ–≤–æ
    def __init__(self, parent: QWidget = None):
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 08.08.2025
        super().__init__(parent)
        self.tab_widget = QTabWidget()
        self.trees = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ä–µ–≤—å–µ–≤ –ø–æ –∏–º–µ–Ω–∞–º –≤–∫–ª–∞–¥–æ–∫

        # üîΩ–î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã 17.09.2025üîΩ
        self.tab_widgets = {}  # {"side_panel": tab_widget1, "editor": tab_widget2}
        self.widget_priorities = []
        # üîΩ–ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ 17.09.2025üîΩ
        self.file_operations = FileOperations()
    def create_tabs(self, tab_data: dict) -> QTabWidget:
        """–°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫–∏ –∏ –¥–µ—Ä–µ–≤—å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è.
        –ö–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –∏–º–µ–Ω–∞ –≤–∫–ª–∞–¥–æ–∫.

        Args:
            tab_data: –°–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ - –∏–º–µ–Ω–∞ –≤–∫–ª–∞–¥–æ–∫, –∞ –∑–Ω–∞—á–µ–Ω–∏—è - —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

        Returns:
            QTabWidget: –í–∏–¥–∂–µ—Ç —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ –≤–∫–ª–∞–¥–∫–∞–º–∏

        Raises:
            ValueError: –ï—Å–ª–∏ —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç
        """
        if not tab_data:
            raise ValueError("–°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–∫–ª–∞–¥–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")

        for tab_name in tab_data.keys():
            self._add_tab(tab_name)
        return self.tab_widget

    def _add_tab(self, name: str) -> QTreeView:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ–¥–Ω—É –≤–∫–ª–∞–¥–∫—É —Å –¥–µ—Ä–µ–≤–æ–º."""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 08.08.2025
        tree = QTreeView()
        tree.setHeaderHidden(True)  # –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

        tab_content = QWidget()
        layout = QVBoxLayout()
        layout.addWidget(tree)
        tab_content.setLayout(layout)

        self.tab_widget.addTab(tab_content, name)
        self.trees[name] = tree
        self.tab_created.emit(name, tree)  # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ —Å–æ–∑–¥–∞–Ω–∏–∏

        return tree


    def _update_tree(self, tree: QTreeView, path: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤."""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 08.08.2025
        # –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤–∞...
        pass

    # üîΩ–î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã 17.09.2025üîΩ
    def register_tab_widget(self, widget_name: str, tab_widget: QTabWidget, priority: int = 0):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç tab_widget —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º"""
        self.tab_widgets[widget_name] = tab_widget
        self.widget_priorities = sorted(
            self.tab_widgets.keys(),
            key=lambda x: priority,
            reverse=True
        )

    def get_active_tab_info(self) -> dict | None:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ –∏–∑ –ª—é–±–æ–≥–æ –æ–∫–Ω–∞"""
        for widget_name in self.widget_priorities:
            tab_widget = self.tab_widgets[widget_name]
            if tab_widget and tab_widget.count() > 0:
                current_index = tab_widget.currentIndex()
                if current_index >= 0:
                    return {
                        'widget_name': widget_name,
                        'tab_name': tab_widget.tabText(current_index),
                        'tab_widget': tab_widget
                    }
        return None

    def launch_download_for_active_tab(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏"""
        tab_info = self.get_active_tab_info()
        if not tab_info:
            print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫")
            return None

        files = self.file_operations.load_st_md_files(tab_info['tab_name'])
        return tab_info['tab_name'], files

    # üîΩ–ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ 17.09.2025üîΩ