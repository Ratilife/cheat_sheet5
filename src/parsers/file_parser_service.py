from src.parsers.st_file_parser import STFileParserWrapper
from src.parsers.md_file_parser import MarkdownListener
import os

class FileParserService:
    def __init__(self):
        self.st_parser = STFileParserWrapper()
        self.md_parser = MarkdownListener()

    def parse_and_get_type(self, file_path: str) -> tuple[str, dict]:
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 06.07.2025
        if file_path.endswith('.st'):
            return "file", self.st_parser.parse_st_file(file_path)
        elif file_path.endswith('.md'):
            return "markdown", self.md_parser.parse_markdown_file(file_path)
        raise ValueError("Unsupported file type")

    def parse_metadata(self, file_path: str) -> dict:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞.

        Args:
            file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –ø–∞–ø–∫–µ

        Returns:
            {
                "name": "–∏–º—è_—Ñ–∞–π–ª–∞",
                "type": "file"|"folder",
                "size": int,
                "last_modified": float (timestamp)
            }
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 15.07.2025
        if os.path.isdir(file_path):
            return {
                "name": os.path.basename(file_path),
                "type": "folder",
                "size": 0,
                "last_modified": os.path.getmtime(file_path)
            }

        # –î–ª—è ST/MD —Ñ–∞–π–ª–æ–≤ - —á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
        with open(file_path, 'r', encoding='utf-8') as f:
            first_lines = [f.readline() for _ in range(3)]  # –ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
        if file_path.endswith('.st'):
            return self.st_parser.parse_st_metadata(file_path, first_lines)
        elif file_path.endswith('.md'):
            return self.md_parser.parse_md_metadata(file_path, first_lines)
        else:
            return {
                "name": os.path.basename(file_path),
                "type": "file",
                "size": os.path.getsize(file_path),
                "last_modified": os.path.getmtime(file_path)
            }



