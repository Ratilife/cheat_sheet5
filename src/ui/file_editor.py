from pathlib import Path
import os
from editor.base_editor import BaseFileEditor
from editor.editor_factory import EditorFactory
from src.observers.my_base_observer import MyBaseObserver
from PySide6.QtCore import Qt
from PySide6.QtWidgets import (QMainWindow, QTreeView, QTabWidget, QTextEdit, QVBoxLayout, QWidget, QSplitter,
                               QHBoxLayout, QLabel, QLineEdit)
from src.widgets.markdown_viewer_widget import MarkdownViewer
class FileEditorWindowObserver(MyBaseObserver):
    # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 30.06.2025
    def __init__(self):
        super().__init__()



class FileEditorWindow(QMainWindow):
    """
        –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–æ—Ä–º–∞—Ç–æ–≤ .st –∏ .md.
        –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤.
    """
    def __init__(self,parent = None):
        super().__init__(parent)
        self.parent = parent
        self.tree_view = QTreeView()
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤
        self.observer = FileEditorWindowObserver()

        self.template_name = "–¢—É—Ç –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç"
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤")
        self.setMinimumSize(800,500)

        if self.parent.tree_model_manager and self.parent.toolbar_manager:
            self._setup_managers(self.parent.tree_model_manager, self.parent.toolbar_manager)

    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        main_widget = QWidget()                          # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –æ–∫–Ω–∞
        self.setCentralWidget(main_widget)               # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∫–∞–∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –æ–∫–Ω–∞
        main_layout = QVBoxLayout(main_widget)                # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
        main_layout.setContentsMargins(5, 5, 5, 5)            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã layout
        main_layout.setSpacing(5)                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –º–µ–∂–¥—É –≤–∏–¥–∂–µ—Ç–∞–º–∏


        # –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è –¥–µ—Ä–µ–≤–∞ –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        self.main_splitter = QSplitter(Qt.Horizontal)  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å!

        #  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–µ—Ä–µ–≤–∞ —Ñ–∞–π–ª–æ–≤ (–≤–∫–ª–∞–¥–æ–∫)
        tree_container = QWidget()
        tree_layout = QVBoxLayout(tree_container)
        tree_layout.setContentsMargins(0, 0, 0, 0)
        tree_layout.setSpacing(0)

        # –î–æ–±–∞–≤–ª—è–µ–º tab_widget —Å –≤—Å–µ–º–∏ –≤–∫–ª–∞–¥–∫–∞–º–∏
        tree_layout.addWidget(self.tab_widget)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –¥–µ—Ä–µ–≤–æ–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        self.main_splitter.addWidget(tree_container)


        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞–¥ –¥–µ—Ä–µ–≤–æ–º
        toolbar_to_tree_layout = self.toolbar_manager.get_above_tree_toolbar_editor()
        main_layout.addWidget(toolbar_to_tree_layout)



        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∏ –∫–Ω–æ–ø–æ–∫
        editor_container = QWidget()  # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        editor_layout = QVBoxLayout(editor_container)  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        editor_layout.setContentsMargins(0, 0, 0, 0)  # –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        editor_layout.setSpacing(0)  # –ë–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–æ–≤

        # –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ –∏–º–µ–Ω–∏ —à–∞–±–ª–æ–Ω–∞
        toolbar_template_container = QWidget()
        toolbar_template_layout = QHBoxLayout(toolbar_template_container)
        toolbar_template_layout.setContentsMargins(0, 0, 0, 0)
        toolbar_template_layout.setSpacing(5)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞–¥ —Ä–µ–¥–∞–∫—Ç–∞—Ä–æ–º
        editor_toolbar = self.toolbar_manager.get_editor_toolbar()
        toolbar_template_layout.addWidget(editor_toolbar)

        #  –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è template_name –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ
        template_label = QLabel()
        self.template_edit = QLineEdit(self.template_name)
        self.template_edit.textChanged.connect(self._on_template_changed)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–µ–∂–¥—É toolbar –∏ template
        toolbar_template_layout.addStretch()  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ

        toolbar_template_layout.addWidget(template_label)
        toolbar_template_layout.addWidget(self.template_edit)

        #  –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ editor_layout
        editor_layout.addWidget(toolbar_template_container)

        # –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã...
        self.text_editor = QTextEdit()
        self.text_editor.setAcceptRichText(False)  # –†–µ–∂–∏–º plain text  –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        editor_layout.addWidget(self.text_editor)

        #–î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        self.main_splitter.addWidget(editor_container)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ (–¥–µ—Ä–µ–≤–æ 30%, —Ä–µ–¥–∞–∫—Ç–æ—Ä 70%)
        self.main_splitter.setSizes([300, 700])

        #  –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä—ã
        self.main_splitter.setChildrenCollapsible(False)  # –ù–µ –ø–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞—Ç—å —á–∞—Å—Ç–∏

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout.addWidget(self.main_splitter)

        #main_layout.addWidget(self.text_editor)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.tab_widget.currentChanged.connect(self._on_tab_changed)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–∏–≥–Ω–∞–ª—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
        self.tree_model_manager.model_updated.connect(self._on_model_updated)

    def _setup_managers(self, tree_model_manager, toolbar_manager):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 02.09.2025
        if not tree_model_manager or not toolbar_manager:
            raise ValueError("tree_model_manager –∏ toolbar_manager –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã")
        self.tree_model_manager = tree_model_manager
        self.toolbar_manager = toolbar_manager

        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –º–æ–¥–µ–ª–∏ –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        self.all_models = tree_model_manager.get_model()  # –≠—Ç–æ —Å–ª–æ–≤–∞—Ä—å {tab_name: model}

        # –°–æ–∑–¥–∞–µ–º QTabWidget –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
        self.tab_widget = QTabWidget()

        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è tree_view –ø–æ –∏–º–µ–Ω–∞–º –≤–∫–ª–∞–¥–æ–∫
        self.tree_views = {}

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –º–æ–¥–µ–ª—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        for tab_name, model in self.all_models.items():
            tree_view = QTreeView()
            tree_view.setModel(model)
            tree_view.header().hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏
            self.tab_widget.addTab(tree_view, tab_name)
            self.tree_views[tab_name] = tree_view  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É

        # –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –ö–û–ù–¢–†–û–õ–õ–ï–† –ö –î–ï–†–ï–í–¨–Ø–ú - –í–ê–ñ–ù–û!
        self.tree_model_manager.connect_tree_views(self.tree_views)

        # –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –°–ò–ì–ù–ê–õ–´ –ö–û–ù–¢–†–û–õ–õ–ï–†–ê
        self._connect_selection_signals()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∫–∞–∫ –≤ SidePanel
        active_info = tree_model_manager.get_active_tab_info()
        if active_info:
            self.tab_widget.setCurrentIndex(
            list(self.all_models.keys()).index(active_info['tab_name'])
            )

        self._init_ui()

        '''# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –≤—ã–¥–µ–ª–µ–Ω–∏—è –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
        current_tab_index = self.tab_widget.currentIndex()
        if current_tab_index >= 0:
            current_tab_name = self.tab_widget.tabText(current_tab_index)
            tree_view = self.tab_widget.widget(current_tab_index)
            if hasattr(tree_view, 'selectionModel'):
                tree_view.selectionModel().selectionChanged.connect(self.on_selection_changed)

        # –¢–∞–∫–∂–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self.tab_widget.currentChanged.connect(self._connect_tree_selection)
        '''

    def _connect_selection_signals(self):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è"""
        controller = self.tree_model_manager.selection_controller
        controller.content_requested.connect(self.on_display_content) #—Ç—É—Ç –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        #controller.error_occurred.connect(self.on_show_selection_error)
        controller.selection_changed.connect(self.on_selection_changed) # —Ç—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

        print("–°–∏–≥–Ω–∞–ª—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã")

    def _refresh_view_for_file(self, model, file_path):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç view –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 02.09.2025 –Ω–µ –ø–æ–Ω—è–ª —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
        # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å —Ñ–∞–π–ª–∞ –≤ –º–æ–¥–µ–ª–∏
        for row in range(model.rowCount()):
            index = model.index(row, 0)
            if index.isValid():
                item = index.internalPointer()
                if (item and len(item.item_data) > 2 and
                        item.item_data[2] == file_path):

                    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
                    model.dataChanged.emit(index, index)

                    # –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Ä–∞—Å–∫—Ä—ã—Ç - –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å—é –≤–µ—Ç–∫—É
                    if self.tree_view.isExpanded(index):
                        top_left = model.index(0, 0, index)
                        bottom_right = model.index(model.rowCount(index) - 1, 0, index)
                        model.dataChanged.emit(top_left, bottom_right)

                    print(f"DEBUG: –û–±–Ω–æ–≤–ª–µ–Ω view –¥–ª—è —Ñ–∞–π–ª–∞ {file_path}")
                    return

        print(f"DEBUG: –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è view")

    def _on_model_updated(self, tab_name, file_path):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è!"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 02.09.2025 –Ω–µ –ø–æ–Ω—è–ª —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
        print(f"DEBUG: –ú–æ–¥–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ - –≤–∫–ª–∞–¥–∫–∞: {tab_name}, —Ñ–∞–π–ª: {file_path}")

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —ç—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏
            if tab_name not in self.all_models:
                print(f"DEBUG: –ú–æ–¥–µ–ª—å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '{tab_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return

            model = self.all_models[tab_name]

            # –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ - –æ–±–Ω–æ–≤–ª—è–µ–º view
            current_tab_index = self.tab_widget.currentIndex()
            if current_tab_index >= 0:
                current_tab_name = self.tab_widget.tabText(current_tab_index)
                if current_tab_name == tab_name:
                    self._refresh_view_for_file(model, file_path)

            # –ú–æ–∂–Ω–æ –¥–æ–±–∞ditional –ª–æ–≥–∏–∫—É:
            # - –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å–±–∞—Ä
            # - –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            # - –ó–∞–ø–∏—Å–∞—Ç—å –≤ –ª–æ–≥

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ _on_model_updated: {e}")
            import traceback
            traceback.print_exc()

    def _on_tab_changed(self, index):
        """
        –°–ª–æ—Ç-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ currentChanged –æ—Ç QTabWidget.
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –¥–≤—É—Ö —Å–ª—É—á–∞—è—Ö:
            1. ‚úÖ –ü—Ä–∏ –ü–†–Ø–ú–û–ú –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: –∫–ª–∏–∫ –Ω–∞ –¥—Ä—É–≥—É—é –≤–∫–ª–∞–¥–∫—É
            2. ‚úÖ –ü—Ä–∏ –ü–†–û–ì–†–ê–ú–ú–ù–û–ú –ò–ó–ú–ï–ù–ï–ù–ò–ò –í–ö–õ–ê–î–ö–ò: –≤—ã–∑–æ–≤ tab_widget.setCurrentIndex()

            –í–ö–õ–Æ–ß–ê–Ø –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–∫–Ω–∞ –≤ _setup_managers().

            –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏ –≤ FileEditorWindow
            –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –æ–∫–Ω–∞–º–∏.

        Args:
            index (int): –ò–Ω–¥–µ–∫—Å –Ω–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        """
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 02.09.2025 –Ω–µ –ø–æ–Ω—è–ª —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–Ω–¥–µ–∫—Å–∞
        if index < 0 or index >= self.tab_widget.count():
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –≤–∫–ª–∞–¥–∫–∏
        tab_name = self.tab_widget.tabText(index)
        print(f"DEBUG: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞: {tab_name}")

        # 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å TreeModelManager
        #active_info = self.tree_model_manager.get_active_tab_info()

        #if active_info and active_info['tab_name'] != tab_name:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
            #self.tree_model_manager.set_active_tab(tab_name)


        # 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
        self.setWindowTitle(f"–†–µ–¥–∞–∫—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤ - {tab_name}")

        # 3. –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏
        current_model = self.all_models.get(tab_name)


        # 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–±–∞—Ä–∞
        # TODO 05.09.2025 —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ –ª–æ–≥–∏—á–µ—Å–∫–∏ –Ω–µ–≤–µ—Ä–Ω–æ
        file_count = current_model.rowCount() if current_model else 0
        self.statusBar().showMessage(
            f"–í–∫–ª–∞–¥–∫–∞: {tab_name} | –§–∞–π–ª–æ–≤: {file_count} | –ì–æ—Ç–æ–≤–æ"
        )

        # 5. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print(f"DEBUG: –ê–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ '{tab_name}', –º–æ–¥–µ–ª—å: {current_model is not None}")

    def on_display_content(self, content_type, content):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 30.08.2025
        try:
            print("üëç –†–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ç–æ–¥ on_display_content()")
            # 1. –°–æ–∑–¥–∞–µ–º appropriate —Ä–µ–¥–∞–∫—Ç–æ—Ä —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
            editor = EditorFactory.create_editor_for_type(content_type, self)  # TODO 05.09.2025 –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥ create_editor_for_type

            # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
            editor.set_content(content)

            # 3. –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ UI
            self._set_current_editor(editor)

            # 4. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            self.statusBar().showMessage(f"–ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∏–ø–∞: {content_type}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            self.statusBar().showMessage(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")
            # –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
            self.text_editor.setPlainText(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:\n{str(e)}")

    '''    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if content_type == 'template':
            pass
        elif content_type == 'markdown':
            pass
    '''


    def on_selection_changed(self, metadata):
        if not metadata.get('has_selection', False):
            return

        item_type = metadata.get('type')
        file_path = metadata.get('path')
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º
        content = self._get_content_for_file(file_path, item_type)
        if content:
            self.on_display_content(item_type, content)

    def _get_content_for_file(self, file_path, content_type):
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            # –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞
            if hasattr(self, 'content_cache'):
                cached_data = self.content_cache.get(file_path)
                if cached_data:
                    return cached_data.get('content', '')

            # –ò–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
            if file_path and os.path.exists(file_path):
                with open(file_path, 'r', encoding='utf-8') as f:
                    return f.read()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}")

        return None

    def _on_template_changed(self, text):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —à–∞–±–ª–æ–Ω–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 03.09.2025
        self.template_name = text
        print(f"–ò–º—è —à–∞–±–ª–æ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {self.template_name}")

    def _connect_tree_selection(self, index):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞"""
        if index < 0:
            return

        # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        try:
            for i in range(self.tab_widget.count()):
                tree = self.tab_widget.widget(i)
                if hasattr(tree, 'selectionModel'):
                    tree.selectionModel().selectionChanged.disconnect()
        except:
            pass

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –¥–µ—Ä–µ–≤—É
        tree_view = self.tab_widget.widget(index)
        if hasattr(tree_view, 'selectionModel'):
            tree_view.selectionModel().selectionChanged.connect(self.on_selection_changed)

    def _set_current_editor(self, editor: BaseFileEditor):
        """
        –ó–∞–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.
        Args:
            editor: –ù–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ (–Ω–∞—Å–ª–µ–¥–Ω–∏–∫ BaseFileEditor)
        """
        # 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä (–µ—Å–ª–∏ –±—ã–ª)
        if hasattr(self, 'current_editor') and self.current_editor:
            # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            try:
                self.current_editor.modification_changed.disconnect()
            except:
                pass

            # –£–¥–∞–ª—è–µ–º –≤–∏–¥–∂–µ—Ç —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∏–∑ layout
            old_editor_widget = self.current_editor.get_editor_widget()
            self.editor_layout.removeWidget(old_editor_widget)
            old_editor_widget.deleteLater()

        # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä
        self.current_editor = editor

        # 3. –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç –Ω–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ layout
        editor_widget = editor.get_editor_widget()
        self.editor_layout.addWidget(editor_widget)

        # 4. –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –Ω–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        editor.modification_changed.connect(self._on_editor_modified)
        # –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥—Ä—É–≥–∏–µ —Å–∏–≥–Ω–∞–ª—ã: error_occurred, validation_finished

        # 5. –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        self._update_window_title(editor.is_modified)
        self._update_toolbar_actions(editor.get_available_actions())

    def _on_editor_modified(self, is_modified: bool):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç UI –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 05.09.2025 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—Ç–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å _on_editor_modified
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ (–¥–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º *)
        title = self.windowTitle().replace(' *', '')
        if is_modified:
            title += ' *'
        self.setWindowTitle(title)

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        if hasattr(self, 'save_action'):
            self.save_action.setEnabled(is_modified)

    def _update_toolbar_actions(self, actions: list):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ actions —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 05.09.2025 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—Ç–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å _update_toolbar_actions
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–Ω–µ–ª—å
        self.editor_toolbar.clear()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–°–æ—Ö—Ä–∞–Ω–∏—Ç—å, –û—Ç–º–µ–Ω–∏—Ç—å)
        self.editor_toolbar.addAction(self.save_action)
        self.editor_toolbar.addAction(self.undo_action)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        self.editor_toolbar.addSeparator()

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ actions —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        for action in actions:
            self.editor_toolbar.addAction(action)