digraph ModuleCallGraph {
  rankdir=LR;
  "func:build_call_graph" [shape=box, style=filled, fillcolor=lightgray, label="build_call_graph"];
  "func:build_index" [shape=box, style=filled, fillcolor=lightgray, label="build_index"];
  "func:collect_classes" [shape=box, style=filled, fillcolor=lightgray, label="collect_classes"];
  "func:collect_imports" [shape=box, style=filled, fillcolor=lightgray, label="collect_imports"];
  "func:discover_python_files" [shape=box, style=filled, fillcolor=lightgray, label="discover_python_files"];
  "func:ensure_output_dir" [shape=box, style=filled, fillcolor=lightgray, label="ensure_output_dir"];
  "func:find_all_usages" [shape=box, style=filled, fillcolor=lightgray, label="find_all_usages"];
  "func:main" [shape=box, style=filled, fillcolor=lightgray, label="main"];
  "func:parse_module" [shape=box, style=filled, fillcolor=lightgray, label="parse_module"];
  "func:path_to_module" [shape=box, style=filled, fillcolor=lightgray, label="path_to_module"];
  "func:render_graph_png" [shape=box, style=filled, fillcolor=lightgray, label="render_graph_png"];
  "func:resolve_target" [shape=box, style=filled, fillcolor=lightgray, label="resolve_target"];
  "func:safe_get_line" [shape=box, style=filled, fillcolor=lightgray, label="safe_get_line"];
  "func:split_module_and_class" [shape=box, style=filled, fillcolor=lightgray, label="split_module_and_class"];
  "func:write_text_outputs" [shape=box, style=filled, fillcolor=lightgray, label="write_text_outputs"];
  "method:MethodCallResolver.__init__" [shape=ellipse, label="MethodCallResolver.__init__"];
  "method:MethodCallResolver._find_method_ref" [shape=ellipse, label="MethodCallResolver._find_method_ref"];
  "method:MethodCallResolver._infer_var_types" [shape=ellipse, label="MethodCallResolver._infer_var_types"];
  "method:MethodCallResolver._resolve_class_for_attribute" [shape=ellipse, label="MethodCallResolver._resolve_class_for_attribute"];
  "method:MethodCallResolver._resolve_class_from_call" [shape=ellipse, label="MethodCallResolver._resolve_class_from_call"];
  "method:MethodCallResolver.find_method_calls_in_method" [shape=ellipse, label="MethodCallResolver.find_method_calls_in_method"];
  "method:MethodRef.fq_class" [shape=ellipse, label="MethodRef.fq_class"];
  "method:MethodRef.fq_method" [shape=ellipse, label="MethodRef.fq_method"];
  "method:ProjectIndex.__init__" [shape=ellipse, label="ProjectIndex.__init__"];
  "method:ProjectIndex.add_class" [shape=ellipse, label="ProjectIndex.add_class"];
  "method:SimpleDiGraph.__init__" [shape=ellipse, label="SimpleDiGraph.__init__"];
  "method:SimpleDiGraph.add_edge" [shape=ellipse, label="SimpleDiGraph.add_edge"];
  "method:SimpleDiGraph.add_node" [shape=ellipse, label="SimpleDiGraph.add_node"];
  "method:SimpleDiGraph.edges" [shape=ellipse, label="SimpleDiGraph.edges"];
  "method:SimpleDiGraph.nodes" [shape=ellipse, label="SimpleDiGraph.nodes"];
  "method:SimpleDiGraph.number_of_edges" [shape=ellipse, label="SimpleDiGraph.number_of_edges"];
  "method:SimpleDiGraph.number_of_nodes" [shape=ellipse, label="SimpleDiGraph.number_of_nodes"];
  "func:build_call_graph" -> "method:MethodCallResolver.find_method_calls_in_method";
  "func:build_call_graph" -> "method:SimpleDiGraph.add_edge";
  "func:build_call_graph" -> "method:SimpleDiGraph.add_node";
  "func:build_index" -> "func:collect_classes";
  "func:build_index" -> "func:collect_imports";
  "func:build_index" -> "func:discover_python_files";
  "func:build_index" -> "func:parse_module";
  "func:build_index" -> "func:path_to_module";
  "func:build_index" -> "method:ProjectIndex.add_class";
  "func:find_all_usages" -> "func:safe_get_line";
  "func:find_all_usages" -> "method:MethodCallResolver.find_method_calls_in_method";
  "func:main" -> "func:build_call_graph";
  "func:main" -> "func:build_index";
  "func:main" -> "func:ensure_output_dir";
  "func:main" -> "func:find_all_usages";
  "func:main" -> "func:render_graph_png";
  "func:main" -> "func:resolve_target";
  "func:main" -> "func:write_text_outputs";
  "func:render_graph_png" -> "method:SimpleDiGraph.nodes";
  "func:write_text_outputs" -> "method:SimpleDiGraph.nodes";
  "func:write_text_outputs" -> "method:SimpleDiGraph.number_of_edges";
  "func:write_text_outputs" -> "method:SimpleDiGraph.number_of_nodes";
  "method:MethodCallResolver._infer_var_types" -> "method:MethodCallResolver._resolve_class_from_call";
  "method:MethodCallResolver._resolve_class_for_attribute" -> "func:split_module_and_class";
  "method:MethodCallResolver._resolve_class_from_call" -> "func:split_module_and_class";
  "method:MethodCallResolver.find_method_calls_in_method" -> "method:MethodCallResolver._find_method_ref";
  "method:MethodCallResolver.find_method_calls_in_method" -> "method:MethodCallResolver._infer_var_types";
  "method:MethodCallResolver.find_method_calls_in_method" -> "method:MethodCallResolver._resolve_class_for_attribute";
}
